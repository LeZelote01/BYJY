# Requirements pour le Vérificateur de Certificats SSL
# ===============================================

# Cryptographie et SSL
cryptography>=41.0.0           # Analyse des certificats X.509
requests>=2.31.0               # Requêtes HTTP pour tests SSL

# Scheduling pour monitoring automatique  
schedule>=1.2.0                # Planification des vérifications

# Modules Python standard utilisés:
# - ssl : vérifications SSL/TLS natives
# - socket : connexions réseau
# - datetime : gestion des dates et timestamps
# - argparse : interface ligne de commande
# - json : export format JSON
# - csv : export format CSV
# - threading : exécution parallèle et monitoring
# - time : gestion du temps et delays
# - urllib.parse : parsing d'URLs
# - concurrent.futures : ThreadPoolExecutor pour performance
# - tkinter : interface graphique (inclus avec Python)
# - tkinter.ttk : widgets modernes
# - tkinter.filedialog : sélection de fichiers
# - tkinter.messagebox : boîtes de dialogue
# - tkinter.scrolledtext : zones de texte avec scrollbars
# - tkinter.font : polices personnalisées

# Version Python recommandée: 3.8+

# Installation:
# pip install -r requirements.txt

# Notes système:

# Linux (Ubuntu/Debian):
# sudo apt-get install python3-tk          # Pour tkinter si non inclus
# sudo apt-get install libssl-dev          # Développement SSL
# sudo apt-get install ca-certificates     # Certificats racine à jour

# macOS:
# brew install python-tk                   # Pour tkinter si nécessaire
# # Certificats généralement à jour via système

# Windows:
# # Généralement aucune dépendance système supplémentaire
# # Certificats Windows utilisés automatiquement

# Fonctionnalités supportées avec ces dépendances:
# ✅ Vérification complète des certificats SSL/TLS
# ✅ Analyse de chaîne de certification
# ✅ Détection des algorithmes faibles
# ✅ Monitoring automatique avec alertes
# ✅ Interface graphique moderne
# ✅ Export HTML/CSV/JSON
# ✅ Vérification en lot multithreadée
# ✅ Support des protocoles TLS 1.0 à 1.3

# Dépendances optionnelles (pour fonctionnalités avancées):
# python-whois>=0.8.0            # Information sur les domaines
# dnspython>=2.4.0               # Résolution DNS avancée  
# colorama>=0.4.6                # Coloration terminal
# rich>=13.5.0                   # Interface console avancée
# pysocks>=1.7.1                 # Support proxy SOCKS

# Pour vérifications OCSP avancées:
# ocspbuilder>=0.10.2            # Construction requêtes OCSP
# asn1crypto>=1.5.1              # Parsing ASN.1

# Pour notifications:
# plyer>=2.1.0                   # Notifications système multiplateformes

# Sécurité et bonnes pratiques:
# - Utilisez toujours des versions récentes de cryptography
# - Mettez à jour régulièrement les certificats racine système
# - Vérifiez que OpenSSL est à jour sur votre système
# - Testez les connexions SSL depuis différents clients

# Performance:
# - Le multithreading est optimisé pour 10-50 threads simultanés
# - Pour de très gros volumes (1000+ hôtes), considérez asyncio
# - Le timeout par défaut (10s) est un bon compromis
# - La validation OCSP peut ralentir significativement les vérifications

# Compatibilité:
# - Python 3.8+ requis pour toutes les fonctionnalités
# - Interface graphique testée sur Windows 10, Ubuntu 20.04+, macOS 10.15+
# - Ligne de commande compatible avec tous les OS supportés par Python