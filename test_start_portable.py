#!/usr/bin/env python3
"""
Test script pour v√©rifier les am√©liorations du start-portable.py
"""

import subprocess
import time
import sys

def test_supervisor_detection():
    """Test la d√©tection de supervisor"""
    print("=== Test de d√©tection de supervisor ===")
    
    try:
        result = subprocess.run([sys.executable, "start-portable.py"], 
                              capture_output=True, text=True, timeout=10)
        print("Sortie du script:")
        print(result.stdout)
        if result.stderr:
            print("Erreurs:")
            print(result.stderr)
        
        # V√©rifier si le script d√©tecte supervisor
        if "already running under supervisor" in result.stdout:
            print("‚úÖ SUCC√àS: Le script d√©tecte correctement supervisor")
            return True
        else:
            print("‚ùå √âCHEC: Le script ne d√©tecte pas supervisor")
            return False
            
    except subprocess.TimeoutExpired:
        print("‚ö†Ô∏è  Le script a √©t√© interrompu apr√®s timeout (normal)")
        return True
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")
        return False

def test_port_detection():
    """Test la d√©tection de ports occup√©s"""
    print("\n=== Test de d√©tection de ports ===")
    
    # V√©rifier si le port 8001 est occup√©
    try:
        import socket
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            result = s.connect_ex(('127.0.0.1', 8001))
            if result == 0:
                print("‚úÖ Port 8001 est occup√© (comme attendu)")
                return True
            else:
                print("‚ö†Ô∏è  Port 8001 n'est pas occup√©")
                return False
    except Exception as e:
        print(f"‚ùå Erreur lors du test de port: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Tests des am√©liorations de start-portable.py")
    print("=" * 50)
    
    results = []
    results.append(test_supervisor_detection())
    results.append(test_port_detection())
    
    print("\n" + "=" * 50)
    print(f"üìä R√©sultats: {sum(results)}/{len(results)} tests r√©ussis")
    
    if all(results):
        print("üéâ Tous les tests sont pass√©s!")
        sys.exit(0)
    else:
        print("‚ö†Ô∏è  Certains tests ont √©chou√©")
        sys.exit(1)